// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transfer_file.proto

package transferfile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendFileRequest struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName" json:"fileName,omitempty"`
	Md5Sum               string   `protobuf:"bytes,2,opt,name=md5Sum" json:"md5Sum,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFileRequest) Reset()         { *m = SendFileRequest{} }
func (m *SendFileRequest) String() string { return proto.CompactTextString(m) }
func (*SendFileRequest) ProtoMessage()    {}
func (*SendFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_transfer_file_a2564c9a147e9b56, []int{0}
}
func (m *SendFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFileRequest.Unmarshal(m, b)
}
func (m *SendFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFileRequest.Marshal(b, m, deterministic)
}
func (dst *SendFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFileRequest.Merge(dst, src)
}
func (m *SendFileRequest) XXX_Size() int {
	return xxx_messageInfo_SendFileRequest.Size(m)
}
func (m *SendFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendFileRequest proto.InternalMessageInfo

func (m *SendFileRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SendFileRequest) GetMd5Sum() string {
	if m != nil {
		return m.Md5Sum
	}
	return ""
}

func (m *SendFileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendFileResponse struct {
	BytesWritten         int64    `protobuf:"varint,1,opt,name=bytesWritten" json:"bytesWritten,omitempty"`
	Md5Sum               []string `protobuf:"bytes,2,rep,name=md5Sum" json:"md5Sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFileResponse) Reset()         { *m = SendFileResponse{} }
func (m *SendFileResponse) String() string { return proto.CompactTextString(m) }
func (*SendFileResponse) ProtoMessage()    {}
func (*SendFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_transfer_file_a2564c9a147e9b56, []int{1}
}
func (m *SendFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFileResponse.Unmarshal(m, b)
}
func (m *SendFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFileResponse.Marshal(b, m, deterministic)
}
func (dst *SendFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFileResponse.Merge(dst, src)
}
func (m *SendFileResponse) XXX_Size() int {
	return xxx_messageInfo_SendFileResponse.Size(m)
}
func (m *SendFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendFileResponse proto.InternalMessageInfo

func (m *SendFileResponse) GetBytesWritten() int64 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

func (m *SendFileResponse) GetMd5Sum() []string {
	if m != nil {
		return m.Md5Sum
	}
	return nil
}

func init() {
	proto.RegisterType((*SendFileRequest)(nil), "transferfile.SendFileRequest")
	proto.RegisterType((*SendFileResponse)(nil), "transferfile.SendFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransferFileClient is the client API for TransferFile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransferFileClient interface {
	SendFile(ctx context.Context, opts ...grpc.CallOption) (TransferFile_SendFileClient, error)
}

type transferFileClient struct {
	cc *grpc.ClientConn
}

func NewTransferFileClient(cc *grpc.ClientConn) TransferFileClient {
	return &transferFileClient{cc}
}

func (c *transferFileClient) SendFile(ctx context.Context, opts ...grpc.CallOption) (TransferFile_SendFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TransferFile_serviceDesc.Streams[0], "/transferfile.TransferFile/SendFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &transferFileSendFileClient{stream}
	return x, nil
}

type TransferFile_SendFileClient interface {
	Send(*SendFileRequest) error
	CloseAndRecv() (*SendFileResponse, error)
	grpc.ClientStream
}

type transferFileSendFileClient struct {
	grpc.ClientStream
}

func (x *transferFileSendFileClient) Send(m *SendFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *transferFileSendFileClient) CloseAndRecv() (*SendFileResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransferFileServer is the server API for TransferFile service.
type TransferFileServer interface {
	SendFile(TransferFile_SendFileServer) error
}

func RegisterTransferFileServer(s *grpc.Server, srv TransferFileServer) {
	s.RegisterService(&_TransferFile_serviceDesc, srv)
}

func _TransferFile_SendFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TransferFileServer).SendFile(&transferFileSendFileServer{stream})
}

type TransferFile_SendFileServer interface {
	SendAndClose(*SendFileResponse) error
	Recv() (*SendFileRequest, error)
	grpc.ServerStream
}

type transferFileSendFileServer struct {
	grpc.ServerStream
}

func (x *transferFileSendFileServer) SendAndClose(m *SendFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *transferFileSendFileServer) Recv() (*SendFileRequest, error) {
	m := new(SendFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TransferFile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transferfile.TransferFile",
	HandlerType: (*TransferFileServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendFile",
			Handler:       _TransferFile_SendFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "transfer_file.proto",
}

func init() { proto.RegisterFile("transfer_file.proto", fileDescriptor_transfer_file_a2564c9a147e9b56) }

var fileDescriptor_transfer_file_a2564c9a147e9b56 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0x8a, 0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x81, 0x09, 0x82, 0xc4, 0x94, 0x22, 0xb9, 0xf8, 0x83, 0x53, 0xf3, 0x52, 0xdc, 0x32, 0x73,
	0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x40, 0x52, 0x7e, 0x89,
	0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70, 0xbe, 0x90, 0x18, 0x17, 0x5b, 0x6e,
	0x8a, 0x69, 0x70, 0x69, 0xae, 0x04, 0x13, 0x58, 0x06, 0xca, 0x13, 0x12, 0xe2, 0x62, 0x49, 0x49,
	0x2c, 0x49, 0x94, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x95, 0xfc, 0xb8, 0x04, 0x10,
	0x46, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x29, 0x71, 0xf1, 0x24, 0x55, 0x96, 0xa4, 0x16,
	0x87, 0x17, 0x65, 0x96, 0x94, 0xa4, 0xe6, 0x81, 0xcd, 0x67, 0x0e, 0x42, 0x11, 0x43, 0xb1, 0x83,
	0x19, 0x61, 0x87, 0x51, 0x2c, 0x17, 0x4f, 0x08, 0xd4, 0xe9, 0x20, 0x33, 0x85, 0x7c, 0xb9, 0x38,
	0x60, 0xe6, 0x0b, 0xc9, 0xea, 0x21, 0xfb, 0x4a, 0x0f, 0xcd, 0x4b, 0x52, 0x72, 0xb8, 0xa4, 0x21,
	0xce, 0x52, 0x62, 0xd0, 0x60, 0x4c, 0x62, 0x03, 0x07, 0x8f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x17, 0x52, 0xeb, 0x5b, 0x35, 0x01, 0x00, 0x00,
}
